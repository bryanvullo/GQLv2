# pr7.gql
DataGraph citations = ACCESS("./input/citations.n4j")
DataGraph result

THROUGH (Node author1 : citations) {
  CONDIF (author1.CALLDATAPOINT(:LABEL) i== "Author") {
    THROUGH (Node author2 : citations) {
      CONDIF (author2.CALLDATAPOINT(:LABEL) i== "Author" AND author1 !== author2) {
        Integer degrees = 0
        
        THROUGH (Association authored : citations) {
          CONDIF (authored.:START_ID i== author1 AND authored.:END_ID i== author2 AND authored.:TYPE i== "AuthoredBy") {
            degrees = 1
          }
        }
        
        CONDIF (degrees i== 0) {
          THROUGH (Node coauthor : citations) {
            THROUGH (Association authored1 : citations) {
              THROUGH (Association authored2 : citations) {
                CONDIF (authored1.:START_ID i== author1 AND authored1.:END_ID i== coauthor AND authored1.:TYPE i== "AuthoredBy" AND
                        authored2.:START_ID i== coauthor AND authored2.:END_ID i== author2 AND authored2.:TYPE i== "AuthoredBy") {
                  degrees = 2
                }
              }
            }
          }
        }
        
        CONDIF (degrees i== 0) {
          THROUGH (Node coauthor1 : citations) {
            THROUGH (Node coauthor2 : citations) {
              THROUGH (Association authored1 : citations) {
                THROUGH (Association authored2 : citations) {
                  THROUGH (Association authored3 : citations) {
                    CONDIF (authored1.:START_ID i== author1 AND authored1.:END_ID i== coauthor1 AND authored1.:TYPE i== "AuthoredBy" AND
                            authored2.:START_ID i== coauthor1 AND authored2.:END_ID i== coauthor2 AND authored2.:TYPE i== "AuthoredBy" AND
                            authored3.:START_ID i== coauthor2 AND authored3.:END_ID i== author2 AND authored3.:TYPE i== "AuthoredBy") {
                      degrees = 3
                    }
                  }
                }
              }
            }
          }
        }
        
        CONDIF (degrees >> 0) {
          Association link
          link.:TYPE = "LinksTo"
          link.:START_ID = author1
          link.:END_ID = author2
          link.degrees = degrees
          result.PLUS(link)
        }
      }
    }
  }
}

STDOUT(result)