-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from InputParser.y
-----------------------------------------------------------------------------

state 8 contains 1 shift/reduce conflicts.
state 11 contains 1 shift/reduce conflicts.
state 14 contains 1 shift/reduce conflicts.
state 25 contains 1 shift/reduce conflicts.
state 32 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseInput -> Tables                        (0)
	Tables ->                                          (1)
	Tables -> Table Tables                             (2)
	Table -> Header Rows                               (3)
	Header -> id ',' Types                             (4)
	Header -> id ',' Types label                       (5)
	Header -> startId ',' Types endId ',' type         (6)
	Types ->                                           (7)
	Types -> Type ',' Types                            (8)
	Type -> Name ':' stringType                        (9)
	Type -> Name ':' intType                           (10)
	Type -> Name ':' boolType                          (11)
	Name -> string                                     (12)
	Name -> alphanum                                   (13)
	Rows ->                                            (14)
	Rows -> Row Rows                                   (15)
	Row -> alphanum Values                             (16)
	Row -> alphanum Values ',' Labels                  (17)
	Row -> alphanum Values ',' alphanum ',' string     (18)
	Labels ->                                          (19)
	Labels -> string                                   (20)
	Labels -> string ';' Labels                        (21)
	Values ->                                          (22)
	Values -> Value Values                             (23)
	Value -> ',' '"' string '"'                        (24)
	Value -> ',' int                                   (25)
	Value -> ',' bool                                  (26)
	Value -> ',' null                                  (27)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	stringType     { Tok _ TokStringType }
	intType        { Tok _ TokIntType }
	boolType       { Tok _ TokBoolType }
	id             { Tok _ TokId }
	startId        { Tok _ TokStartId }
	endId          { Tok _ TokEndId }
	label          { Tok _ TokLabel }
	type           { Tok _ TokType }
	string         { Tok _ (TokString $$) }
	alphanum       { Tok _ (TokAlphaNum $$) }
	int            { Tok _ (TokInt $$) }
	bool           { Tok _ (TokBool $$) }
	null           { Tok _ TokNull }
	':'            { Tok _ TokColon }
	';'            { Tok _ TokSemiColon }
	','            { Tok _ TokComma }
	'"'            { Tok _ TokQuoteMark }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseInput rule  0
	Tables          rules 1, 2
	Table           rule  3
	Header          rules 4, 5, 6
	Types           rules 7, 8
	Type            rules 9, 10, 11
	Name            rules 12, 13
	Rows            rules 14, 15
	Row             rules 16, 17, 18
	Labels          rules 19, 20, 21
	Values          rules 22, 23
	Value           rules 24, 25, 26, 27

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseInput -> . Tables                       (rule 0)

	id             shift, and enter state 5
	startId        shift, and enter state 6
	%eof           reduce using rule 1

	Tables         goto state 2
	Table          goto state 3
	Header         goto state 4

State 1

	Tables -> .                                         (rule 1)



State 2

	%start_parseInput -> Tables .                       (rule 0)

	%eof           accept


State 3

	Tables -> Table . Tables                            (rule 2)

	id             shift, and enter state 5
	startId        shift, and enter state 6
	%eof           reduce using rule 1

	Tables         goto state 12
	Table          goto state 3
	Header         goto state 4

State 4

	Table -> Header . Rows                              (rule 3)

	id             reduce using rule 14
	startId        reduce using rule 14
	alphanum       shift, and enter state 11
	%eof           reduce using rule 14

	Rows           goto state 9
	Row            goto state 10

State 5

	Header -> id . ',' Types                            (rule 4)
	Header -> id . ',' Types label                      (rule 5)

	','            shift, and enter state 8


State 6

	Header -> startId . ',' Types endId ',' type        (rule 6)

	','            shift, and enter state 7


State 7

	Header -> startId ',' . Types endId ',' type        (rule 6)

	endId          reduce using rule 7
	string         shift, and enter state 20
	alphanum       shift, and enter state 21

	Types          goto state 22
	Type           goto state 18
	Name           goto state 19

State 8

	Header -> id ',' . Types                            (rule 4)
	Header -> id ',' . Types label                      (rule 5)

	id             reduce using rule 7
	startId        reduce using rule 7
	label          reduce using rule 7
	string         shift, and enter state 20
	alphanum       shift, and enter state 21
			(reduce using rule 7)

	%eof           reduce using rule 7

	Types          goto state 17
	Type           goto state 18
	Name           goto state 19

State 9

	Table -> Header Rows .                              (rule 3)

	id             reduce using rule 3
	startId        reduce using rule 3
	%eof           reduce using rule 3


State 10

	Rows -> Row . Rows                                  (rule 15)

	id             reduce using rule 14
	startId        reduce using rule 14
	alphanum       shift, and enter state 11
	%eof           reduce using rule 14

	Rows           goto state 16
	Row            goto state 10

State 11

	Row -> alphanum . Values                            (rule 16)
	Row -> alphanum . Values ',' Labels                 (rule 17)
	Row -> alphanum . Values ',' alphanum ',' string    (rule 18)

	id             reduce using rule 22
	startId        reduce using rule 22
	alphanum       reduce using rule 22
	','            shift, and enter state 15
			(reduce using rule 22)

	%eof           reduce using rule 22

	Values         goto state 13
	Value          goto state 14

State 12

	Tables -> Table Tables .                            (rule 2)

	%eof           reduce using rule 2


State 13

	Row -> alphanum Values .                            (rule 16)
	Row -> alphanum Values . ',' Labels                 (rule 17)
	Row -> alphanum Values . ',' alphanum ',' string    (rule 18)

	id             reduce using rule 16
	startId        reduce using rule 16
	alphanum       reduce using rule 16
	','            shift, and enter state 32
	%eof           reduce using rule 16


State 14

	Values -> Value . Values                            (rule 23)

	id             reduce using rule 22
	startId        reduce using rule 22
	alphanum       reduce using rule 22
	','            shift, and enter state 15
			(reduce using rule 22)

	%eof           reduce using rule 22

	Values         goto state 31
	Value          goto state 14

State 15

	Value -> ',' . '"' string '"'                       (rule 24)
	Value -> ',' . int                                  (rule 25)
	Value -> ',' . bool                                 (rule 26)
	Value -> ',' . null                                 (rule 27)

	int            shift, and enter state 27
	bool           shift, and enter state 28
	null           shift, and enter state 29
	'"'            shift, and enter state 30


State 16

	Rows -> Row Rows .                                  (rule 15)

	id             reduce using rule 15
	startId        reduce using rule 15
	%eof           reduce using rule 15


State 17

	Header -> id ',' Types .                            (rule 4)
	Header -> id ',' Types . label                      (rule 5)

	id             reduce using rule 4
	startId        reduce using rule 4
	label          shift, and enter state 26
	alphanum       reduce using rule 4
	%eof           reduce using rule 4


State 18

	Types -> Type . ',' Types                           (rule 8)

	','            shift, and enter state 25


State 19

	Type -> Name . ':' stringType                       (rule 9)
	Type -> Name . ':' intType                          (rule 10)
	Type -> Name . ':' boolType                         (rule 11)

	':'            shift, and enter state 24


State 20

	Name -> string .                                    (rule 12)

	':'            reduce using rule 12


State 21

	Name -> alphanum .                                  (rule 13)

	':'            reduce using rule 13


State 22

	Header -> startId ',' Types . endId ',' type        (rule 6)

	endId          shift, and enter state 23


State 23

	Header -> startId ',' Types endId . ',' type        (rule 6)

	','            shift, and enter state 41


State 24

	Type -> Name ':' . stringType                       (rule 9)
	Type -> Name ':' . intType                          (rule 10)
	Type -> Name ':' . boolType                         (rule 11)

	stringType     shift, and enter state 38
	intType        shift, and enter state 39
	boolType       shift, and enter state 40


State 25

	Types -> Type ',' . Types                           (rule 8)

	id             reduce using rule 7
	startId        reduce using rule 7
	endId          reduce using rule 7
	label          reduce using rule 7
	string         shift, and enter state 20
	alphanum       shift, and enter state 21
			(reduce using rule 7)

	%eof           reduce using rule 7

	Types          goto state 37
	Type           goto state 18
	Name           goto state 19

State 26

	Header -> id ',' Types label .                      (rule 5)

	id             reduce using rule 5
	startId        reduce using rule 5
	alphanum       reduce using rule 5
	%eof           reduce using rule 5


State 27

	Value -> ',' int .                                  (rule 25)

	id             reduce using rule 25
	startId        reduce using rule 25
	alphanum       reduce using rule 25
	','            reduce using rule 25
	%eof           reduce using rule 25


State 28

	Value -> ',' bool .                                 (rule 26)

	id             reduce using rule 26
	startId        reduce using rule 26
	alphanum       reduce using rule 26
	','            reduce using rule 26
	%eof           reduce using rule 26


State 29

	Value -> ',' null .                                 (rule 27)

	id             reduce using rule 27
	startId        reduce using rule 27
	alphanum       reduce using rule 27
	','            reduce using rule 27
	%eof           reduce using rule 27


State 30

	Value -> ',' '"' . string '"'                       (rule 24)

	string         shift, and enter state 36


State 31

	Values -> Value Values .                            (rule 23)

	id             reduce using rule 23
	startId        reduce using rule 23
	alphanum       reduce using rule 23
	','            reduce using rule 23
	%eof           reduce using rule 23


State 32

	Row -> alphanum Values ',' . Labels                 (rule 17)
	Row -> alphanum Values ',' . alphanum ',' string    (rule 18)

	id             reduce using rule 19
	startId        reduce using rule 19
	string         shift, and enter state 34
	alphanum       shift, and enter state 35
			(reduce using rule 19)

	%eof           reduce using rule 19

	Labels         goto state 33

State 33

	Row -> alphanum Values ',' Labels .                 (rule 17)

	id             reduce using rule 17
	startId        reduce using rule 17
	alphanum       reduce using rule 17
	%eof           reduce using rule 17


State 34

	Labels -> string .                                  (rule 20)
	Labels -> string . ';' Labels                       (rule 21)

	id             reduce using rule 20
	startId        reduce using rule 20
	alphanum       reduce using rule 20
	';'            shift, and enter state 45
	%eof           reduce using rule 20


State 35

	Row -> alphanum Values ',' alphanum . ',' string    (rule 18)

	','            shift, and enter state 44


State 36

	Value -> ',' '"' string . '"'                       (rule 24)

	'"'            shift, and enter state 43


State 37

	Types -> Type ',' Types .                           (rule 8)

	id             reduce using rule 8
	startId        reduce using rule 8
	endId          reduce using rule 8
	label          reduce using rule 8
	alphanum       reduce using rule 8
	%eof           reduce using rule 8


State 38

	Type -> Name ':' stringType .                       (rule 9)

	','            reduce using rule 9


State 39

	Type -> Name ':' intType .                          (rule 10)

	','            reduce using rule 10


State 40

	Type -> Name ':' boolType .                         (rule 11)

	','            reduce using rule 11


State 41

	Header -> startId ',' Types endId ',' . type        (rule 6)

	type           shift, and enter state 42


State 42

	Header -> startId ',' Types endId ',' type .        (rule 6)

	id             reduce using rule 6
	startId        reduce using rule 6
	alphanum       reduce using rule 6
	%eof           reduce using rule 6


State 43

	Value -> ',' '"' string '"' .                       (rule 24)

	id             reduce using rule 24
	startId        reduce using rule 24
	alphanum       reduce using rule 24
	','            reduce using rule 24
	%eof           reduce using rule 24


State 44

	Row -> alphanum Values ',' alphanum ',' . string    (rule 18)

	string         shift, and enter state 47


State 45

	Labels -> string ';' . Labels                       (rule 21)

	id             reduce using rule 19
	startId        reduce using rule 19
	string         shift, and enter state 34
	alphanum       reduce using rule 19
	%eof           reduce using rule 19

	Labels         goto state 46

State 46

	Labels -> string ';' Labels .                       (rule 21)

	id             reduce using rule 21
	startId        reduce using rule 21
	alphanum       reduce using rule 21
	%eof           reduce using rule 21


State 47

	Row -> alphanum Values ',' alphanum ',' string .    (rule 18)

	id             reduce using rule 18
	startId        reduce using rule 18
	alphanum       reduce using rule 18
	%eof           reduce using rule 18


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 28
Number of terminals: 17
Number of non-terminals: 12
Number of states: 48
