-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from InputParser.y
-----------------------------------------------------------------------------

state 6 contains 1 shift/reduce conflicts.
state 7 contains 1 shift/reduce conflicts.
state 12 contains 5 reduce/reduce conflicts.
state 13 contains 5 reduce/reduce conflicts.
state 16 contains 1 shift/reduce conflicts.
state 27 contains 1 shift/reduce conflicts.
state 32 contains 1 shift/reduce conflicts.
state 52 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseInput -> Tables                        (0)
	Tables ->                                          (1)
	Tables -> Table Tables                             (2)
	Table -> Header Rows                               (3)
	Header -> ':' id Types                             (4)
	Header -> ':' id Types ',' ':' label               (5)
	Header -> ':' startId Types ',' ':' endId ',' ':' type   (6)
	Types ->                                           (7)
	Types -> ',' Type Types                            (8)
	Type -> String ':' stringType                      (9)
	Type -> String ':' intType                         (10)
	Type -> String ':' boolType                        (11)
	String -> string                                   (12)
	String -> alphanum                                 (13)
	Rows ->                                            (14)
	Rows -> Row Rows                                   (15)
	Row -> ID Values                                   (16)
	Row -> ID Values ',' Labels                        (17)
	Row -> StartID Values ',' EndID ',' Relationship   (18)
	ID -> string                                       (19)
	ID -> alphanum                                     (20)
	StartID -> string                                  (21)
	StartID -> alphanum                                (22)
	EndID -> string                                    (23)
	EndID -> alphanum                                  (24)
	Labels ->                                          (25)
	Labels -> string                                   (26)
	Labels -> string ';' Labels                        (27)
	Relationship -> string                             (28)
	Values ->                                          (29)
	Values -> Value                                    (30)
	Values -> Value ',' Values                         (31)
	Value -> '"' string '"'                            (32)
	Value -> int                                       (33)
	Value -> bool                                      (34)
	Value -> null                                      (35)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	stringType     { Tok _ TokStringType }
	intType        { Tok _ TokIntType }
	boolType       { Tok _ TokBoolType }
	id             { Tok _ TokId }
	startId        { Tok _ TokStartId }
	endId          { Tok _ TokEndId }
	label          { Tok _ TokLabel }
	type           { Tok _ TokType }
	string         { Tok _ (TokString $$) }
	alphanum       { Tok _ (TokAlphaNum $$) }
	int            { Tok _ (TokInt $$) }
	bool           { Tok _ (TokBool $$) }
	null           { Tok _ TokNull }
	':'            { Tok _ TokColon }
	';'            { Tok _ TokSemiColon }
	','            { Tok _ TokComma }
	'"'            { Tok _ TokQuoteMark }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseInput rule  0
	Tables          rules 1, 2
	Table           rule  3
	Header          rules 4, 5, 6
	Types           rules 7, 8
	Type            rules 9, 10, 11
	String          rules 12, 13
	Rows            rules 14, 15
	Row             rules 16, 17, 18
	ID              rules 19, 20
	StartID         rules 21, 22
	EndID           rules 23, 24
	Labels          rules 25, 26, 27
	Relationship    rule  28
	Values          rules 29, 30, 31
	Value           rules 32, 33, 34, 35

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseInput -> . Tables                       (rule 0)

	':'            shift, and enter state 5
	%eof           reduce using rule 1

	Tables         goto state 2
	Table          goto state 3
	Header         goto state 4

State 1

	Tables -> .                                         (rule 1)



State 2

	%start_parseInput -> Tables .                       (rule 0)

	%eof           accept


State 3

	Tables -> Table . Tables                            (rule 2)

	':'            shift, and enter state 5
	%eof           reduce using rule 1

	Tables         goto state 14
	Table          goto state 3
	Header         goto state 4

State 4

	Table -> Header . Rows                              (rule 3)

	string         shift, and enter state 12
	alphanum       shift, and enter state 13
	':'            reduce using rule 14
	%eof           reduce using rule 14

	Rows           goto state 8
	Row            goto state 9
	ID             goto state 10
	StartID        goto state 11

State 5

	Header -> ':' . id Types                            (rule 4)
	Header -> ':' . id Types ',' ':' label              (rule 5)
	Header -> ':' . startId Types ',' ':' endId ',' ':' type    (rule 6)

	id             shift, and enter state 6
	startId        shift, and enter state 7


State 6

	Header -> ':' id . Types                            (rule 4)
	Header -> ':' id . Types ',' ':' label              (rule 5)

	string         reduce using rule 7
	alphanum       reduce using rule 7
	':'            reduce using rule 7
	','            shift, and enter state 24
			(reduce using rule 7)

	%eof           reduce using rule 7

	Types          goto state 25

State 7

	Header -> ':' startId . Types ',' ':' endId ',' ':' type    (rule 6)

	','            shift, and enter state 24
			(reduce using rule 7)


	Types          goto state 23

State 8

	Table -> Header Rows .                              (rule 3)

	':'            reduce using rule 3
	%eof           reduce using rule 3


State 9

	Rows -> Row . Rows                                  (rule 15)

	string         shift, and enter state 12
	alphanum       shift, and enter state 13
	':'            reduce using rule 14
	%eof           reduce using rule 14

	Rows           goto state 22
	Row            goto state 9
	ID             goto state 10
	StartID        goto state 11

State 10

	Row -> ID . Values                                  (rule 16)
	Row -> ID . Values ',' Labels                       (rule 17)

	string         reduce using rule 29
	alphanum       reduce using rule 29
	int            shift, and enter state 17
	bool           shift, and enter state 18
	null           shift, and enter state 19
	':'            reduce using rule 29
	','            reduce using rule 29
	'"'            shift, and enter state 20
	%eof           reduce using rule 29

	Values         goto state 21
	Value          goto state 16

State 11

	Row -> StartID . Values ',' EndID ',' Relationship    (rule 18)

	int            shift, and enter state 17
	bool           shift, and enter state 18
	null           shift, and enter state 19
	','            reduce using rule 29
	'"'            shift, and enter state 20

	Values         goto state 15
	Value          goto state 16

State 12

	ID -> string .                                      (rule 19)
	StartID -> string .                                 (rule 21)

	string         reduce using rule 19
	alphanum       reduce using rule 19
	int            reduce using rule 21
			(reduce using rule 19)

	bool           reduce using rule 21
			(reduce using rule 19)

	null           reduce using rule 21
			(reduce using rule 19)

	':'            reduce using rule 19
	','            reduce using rule 21
			(reduce using rule 19)

	'"'            reduce using rule 21
			(reduce using rule 19)

	%eof           reduce using rule 19


State 13

	ID -> alphanum .                                    (rule 20)
	StartID -> alphanum .                               (rule 22)

	string         reduce using rule 20
	alphanum       reduce using rule 20
	int            reduce using rule 22
			(reduce using rule 20)

	bool           reduce using rule 22
			(reduce using rule 20)

	null           reduce using rule 22
			(reduce using rule 20)

	':'            reduce using rule 20
	','            reduce using rule 22
			(reduce using rule 20)

	'"'            reduce using rule 22
			(reduce using rule 20)

	%eof           reduce using rule 20


State 14

	Tables -> Table Tables .                            (rule 2)

	%eof           reduce using rule 2


State 15

	Row -> StartID Values . ',' EndID ',' Relationship    (rule 18)

	','            shift, and enter state 35


State 16

	Values -> Value .                                   (rule 30)
	Values -> Value . ',' Values                        (rule 31)

	string         reduce using rule 30
	alphanum       reduce using rule 30
	':'            reduce using rule 30
	','            shift, and enter state 34
			(reduce using rule 30)

	%eof           reduce using rule 30


State 17

	Value -> int .                                      (rule 33)

	string         reduce using rule 33
	alphanum       reduce using rule 33
	':'            reduce using rule 33
	','            reduce using rule 33
	%eof           reduce using rule 33


State 18

	Value -> bool .                                     (rule 34)

	string         reduce using rule 34
	alphanum       reduce using rule 34
	':'            reduce using rule 34
	','            reduce using rule 34
	%eof           reduce using rule 34


State 19

	Value -> null .                                     (rule 35)

	string         reduce using rule 35
	alphanum       reduce using rule 35
	':'            reduce using rule 35
	','            reduce using rule 35
	%eof           reduce using rule 35


State 20

	Value -> '"' . string '"'                           (rule 32)

	string         shift, and enter state 33


State 21

	Row -> ID Values .                                  (rule 16)
	Row -> ID Values . ',' Labels                       (rule 17)

	string         reduce using rule 16
	alphanum       reduce using rule 16
	':'            reduce using rule 16
	','            shift, and enter state 32
	%eof           reduce using rule 16


State 22

	Rows -> Row Rows .                                  (rule 15)

	':'            reduce using rule 15
	%eof           reduce using rule 15


State 23

	Header -> ':' startId Types . ',' ':' endId ',' ':' type    (rule 6)

	','            shift, and enter state 31


State 24

	Types -> ',' . Type Types                           (rule 8)

	string         shift, and enter state 29
	alphanum       shift, and enter state 30

	Type           goto state 27
	String         goto state 28

State 25

	Header -> ':' id Types .                            (rule 4)
	Header -> ':' id Types . ',' ':' label              (rule 5)

	string         reduce using rule 4
	alphanum       reduce using rule 4
	':'            reduce using rule 4
	','            shift, and enter state 26
	%eof           reduce using rule 4


State 26

	Header -> ':' id Types ',' . ':' label              (rule 5)

	':'            shift, and enter state 46


State 27

	Types -> ',' Type . Types                           (rule 8)

	string         reduce using rule 7
	alphanum       reduce using rule 7
	':'            reduce using rule 7
	','            shift, and enter state 24
			(reduce using rule 7)

	%eof           reduce using rule 7

	Types          goto state 45

State 28

	Type -> String . ':' stringType                     (rule 9)
	Type -> String . ':' intType                        (rule 10)
	Type -> String . ':' boolType                       (rule 11)

	':'            shift, and enter state 44


State 29

	String -> string .                                  (rule 12)

	':'            reduce using rule 12


State 30

	String -> alphanum .                                (rule 13)

	':'            reduce using rule 13


State 31

	Header -> ':' startId Types ',' . ':' endId ',' ':' type    (rule 6)

	':'            shift, and enter state 43


State 32

	Row -> ID Values ',' . Labels                       (rule 17)

	string         shift, and enter state 42
			(reduce using rule 25)

	alphanum       reduce using rule 25
	':'            reduce using rule 25
	%eof           reduce using rule 25

	Labels         goto state 41

State 33

	Value -> '"' string . '"'                           (rule 32)

	'"'            shift, and enter state 40


State 34

	Values -> Value ',' . Values                        (rule 31)

	string         reduce using rule 29
	alphanum       reduce using rule 29
	int            shift, and enter state 17
	bool           shift, and enter state 18
	null           shift, and enter state 19
	':'            reduce using rule 29
	','            reduce using rule 29
	'"'            shift, and enter state 20
	%eof           reduce using rule 29

	Values         goto state 39
	Value          goto state 16

State 35

	Row -> StartID Values ',' . EndID ',' Relationship    (rule 18)

	string         shift, and enter state 37
	alphanum       shift, and enter state 38

	EndID          goto state 36

State 36

	Row -> StartID Values ',' EndID . ',' Relationship    (rule 18)

	','            shift, and enter state 53


State 37

	EndID -> string .                                   (rule 23)

	','            reduce using rule 23


State 38

	EndID -> alphanum .                                 (rule 24)

	','            reduce using rule 24


State 39

	Values -> Value ',' Values .                        (rule 31)

	string         reduce using rule 31
	alphanum       reduce using rule 31
	':'            reduce using rule 31
	','            reduce using rule 31
	%eof           reduce using rule 31


State 40

	Value -> '"' string '"' .                           (rule 32)

	string         reduce using rule 32
	alphanum       reduce using rule 32
	':'            reduce using rule 32
	','            reduce using rule 32
	%eof           reduce using rule 32


State 41

	Row -> ID Values ',' Labels .                       (rule 17)

	string         reduce using rule 17
	alphanum       reduce using rule 17
	':'            reduce using rule 17
	%eof           reduce using rule 17


State 42

	Labels -> string .                                  (rule 26)
	Labels -> string . ';' Labels                       (rule 27)

	string         reduce using rule 26
	alphanum       reduce using rule 26
	':'            reduce using rule 26
	';'            shift, and enter state 52
	%eof           reduce using rule 26


State 43

	Header -> ':' startId Types ',' ':' . endId ',' ':' type    (rule 6)

	endId          shift, and enter state 51


State 44

	Type -> String ':' . stringType                     (rule 9)
	Type -> String ':' . intType                        (rule 10)
	Type -> String ':' . boolType                       (rule 11)

	stringType     shift, and enter state 48
	intType        shift, and enter state 49
	boolType       shift, and enter state 50


State 45

	Types -> ',' Type Types .                           (rule 8)

	string         reduce using rule 8
	alphanum       reduce using rule 8
	':'            reduce using rule 8
	','            reduce using rule 8
	%eof           reduce using rule 8


State 46

	Header -> ':' id Types ',' ':' . label              (rule 5)

	label          shift, and enter state 47


State 47

	Header -> ':' id Types ',' ':' label .              (rule 5)

	string         reduce using rule 5
	alphanum       reduce using rule 5
	':'            reduce using rule 5
	%eof           reduce using rule 5


State 48

	Type -> String ':' stringType .                     (rule 9)

	string         reduce using rule 9
	alphanum       reduce using rule 9
	':'            reduce using rule 9
	','            reduce using rule 9
	%eof           reduce using rule 9


State 49

	Type -> String ':' intType .                        (rule 10)

	string         reduce using rule 10
	alphanum       reduce using rule 10
	':'            reduce using rule 10
	','            reduce using rule 10
	%eof           reduce using rule 10


State 50

	Type -> String ':' boolType .                       (rule 11)

	string         reduce using rule 11
	alphanum       reduce using rule 11
	':'            reduce using rule 11
	','            reduce using rule 11
	%eof           reduce using rule 11


State 51

	Header -> ':' startId Types ',' ':' endId . ',' ':' type    (rule 6)

	','            shift, and enter state 57


State 52

	Labels -> string ';' . Labels                       (rule 27)

	string         shift, and enter state 42
			(reduce using rule 25)

	alphanum       reduce using rule 25
	':'            reduce using rule 25
	%eof           reduce using rule 25

	Labels         goto state 56

State 53

	Row -> StartID Values ',' EndID ',' . Relationship    (rule 18)

	string         shift, and enter state 55

	Relationship   goto state 54

State 54

	Row -> StartID Values ',' EndID ',' Relationship .    (rule 18)

	string         reduce using rule 18
	alphanum       reduce using rule 18
	':'            reduce using rule 18
	%eof           reduce using rule 18


State 55

	Relationship -> string .                            (rule 28)

	string         reduce using rule 28
	alphanum       reduce using rule 28
	':'            reduce using rule 28
	%eof           reduce using rule 28


State 56

	Labels -> string ';' Labels .                       (rule 27)

	string         reduce using rule 27
	alphanum       reduce using rule 27
	':'            reduce using rule 27
	%eof           reduce using rule 27


State 57

	Header -> ':' startId Types ',' ':' endId ',' . ':' type    (rule 6)

	':'            shift, and enter state 58


State 58

	Header -> ':' startId Types ',' ':' endId ',' ':' . type    (rule 6)

	type           shift, and enter state 59


State 59

	Header -> ':' startId Types ',' ':' endId ',' ':' type .    (rule 6)

	string         reduce using rule 6
	alphanum       reduce using rule 6
	':'            reduce using rule 6
	%eof           reduce using rule 6


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 36
Number of terminals: 17
Number of non-terminals: 16
Number of states: 60
