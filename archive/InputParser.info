-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from InputParser.y
-----------------------------------------------------------------------------

state 19 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseInput -> Tables                        (0)
	Tables ->                                          (1)
	Tables -> Table '\n' Tables                        (2)
	Table -> Header '\n' Rows                          (3)
	Header -> ':' id ',' Types                         (4)
	Header -> ':' id ',' Types ',' ':' label           (5)
	Header -> ':' startId ',' Types ',' ':' endId ',' ':' type   (6)
	Types -> Type                                      (7)
	Types -> Type ',' Types                            (8)
	Type -> String ':' stringType                      (9)
	Type -> String ':' intType                         (10)
	Type -> String ':' boolType                        (11)
	String -> string                                   (12)
	String -> alphanum                                 (13)
	Rows ->                                            (14)
	Rows -> Row Rows                                   (15)
	Row -> ID Value '\n'                               (16)
	Row -> ID Value ',' Labels '\n'                    (17)
	Row -> ID Value ',' ID ',' Relationship '\n'       (18)
	ID -> string                                       (19)
	ID -> alphanum                                     (20)
	Labels ->                                          (21)
	Labels -> string                                   (22)
	Labels -> string ';' Labels                        (23)
	Relationship -> string                             (24)
	Value -> ',' '"' string '"'                        (25)
	Value -> ',' int                                   (26)
	Value -> ',' bool                                  (27)
	Value -> ',' null                                  (28)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	stringType     { Tok _ TokStringType }
	intType        { Tok _ TokIntType }
	boolType       { Tok _ TokBoolType }
	id             { Tok _ TokId }
	startId        { Tok _ TokStartId }
	endId          { Tok _ TokEndId }
	label          { Tok _ TokLabel }
	type           { Tok _ TokType }
	string         { Tok _ (TokString $$) }
	alphanum       { Tok _ (TokAlphaNum $$) }
	int            { Tok _ (TokInt $$) }
	bool           { Tok _ (TokBool $$) }
	null           { Tok _ TokNull }
	':'            { Tok _ TokColon }
	';'            { Tok _ TokSemiColon }
	','            { Tok _ TokComma }
	'"'            { Tok _ TokQuoteMark }
	'\n'           { Tok _ TokNL }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseInput rule  0
	Tables          rules 1, 2
	Table           rule  3
	Header          rules 4, 5, 6
	Types           rules 7, 8
	Type            rules 9, 10, 11
	String          rules 12, 13
	Rows            rules 14, 15
	Row             rules 16, 17, 18
	ID              rules 19, 20
	Labels          rules 21, 22, 23
	Relationship    rule  24
	Value           rules 25, 26, 27, 28

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseInput -> . Tables                       (rule 0)

	':'            shift, and enter state 5
	%eof           reduce using rule 1

	Tables         goto state 2
	Table          goto state 3
	Header         goto state 4

State 1

	Tables -> .                                         (rule 1)



State 2

	%start_parseInput -> Tables .                       (rule 0)

	%eof           accept


State 3

	Tables -> Table . '\n' Tables                       (rule 2)

	'\n'           shift, and enter state 9


State 4

	Table -> Header . '\n' Rows                         (rule 3)

	'\n'           shift, and enter state 8


State 5

	Header -> ':' . id ',' Types                        (rule 4)
	Header -> ':' . id ',' Types ',' ':' label          (rule 5)
	Header -> ':' . startId ',' Types ',' ':' endId ',' ':' type    (rule 6)

	id             shift, and enter state 6
	startId        shift, and enter state 7


State 6

	Header -> ':' id . ',' Types                        (rule 4)
	Header -> ':' id . ',' Types ',' ':' label          (rule 5)

	','            shift, and enter state 17


State 7

	Header -> ':' startId . ',' Types ',' ':' endId ',' ':' type    (rule 6)

	','            shift, and enter state 16


State 8

	Table -> Header '\n' . Rows                         (rule 3)

	string         shift, and enter state 14
	alphanum       shift, and enter state 15
	'\n'           reduce using rule 14

	Rows           goto state 11
	Row            goto state 12
	ID             goto state 13

State 9

	Tables -> Table '\n' . Tables                       (rule 2)

	':'            shift, and enter state 5
	%eof           reduce using rule 1

	Tables         goto state 10
	Table          goto state 3
	Header         goto state 4

State 10

	Tables -> Table '\n' Tables .                       (rule 2)

	%eof           reduce using rule 2


State 11

	Table -> Header '\n' Rows .                         (rule 3)

	'\n'           reduce using rule 3


State 12

	Rows -> Row . Rows                                  (rule 15)

	string         shift, and enter state 14
	alphanum       shift, and enter state 15
	'\n'           reduce using rule 14

	Rows           goto state 26
	Row            goto state 12
	ID             goto state 13

State 13

	Row -> ID . Value '\n'                              (rule 16)
	Row -> ID . Value ',' Labels '\n'                   (rule 17)
	Row -> ID . Value ',' ID ',' Relationship '\n'      (rule 18)

	','            shift, and enter state 25

	Value          goto state 24

State 14

	ID -> string .                                      (rule 19)

	','            reduce using rule 19


State 15

	ID -> alphanum .                                    (rule 20)

	','            reduce using rule 20


State 16

	Header -> ':' startId ',' . Types ',' ':' endId ',' ':' type    (rule 6)

	string         shift, and enter state 21
	alphanum       shift, and enter state 22

	Types          goto state 23
	Type           goto state 19
	String         goto state 20

State 17

	Header -> ':' id ',' . Types                        (rule 4)
	Header -> ':' id ',' . Types ',' ':' label          (rule 5)

	string         shift, and enter state 21
	alphanum       shift, and enter state 22

	Types          goto state 18
	Type           goto state 19
	String         goto state 20

State 18

	Header -> ':' id ',' Types .                        (rule 4)
	Header -> ':' id ',' Types . ',' ':' label          (rule 5)

	','            shift, and enter state 36
	'\n'           reduce using rule 4


State 19

	Types -> Type .                                     (rule 7)
	Types -> Type . ',' Types                           (rule 8)

	','            shift, and enter state 35
			(reduce using rule 7)

	'\n'           reduce using rule 7


State 20

	Type -> String . ':' stringType                     (rule 9)
	Type -> String . ':' intType                        (rule 10)
	Type -> String . ':' boolType                       (rule 11)

	':'            shift, and enter state 34


State 21

	String -> string .                                  (rule 12)

	':'            reduce using rule 12


State 22

	String -> alphanum .                                (rule 13)

	':'            reduce using rule 13


State 23

	Header -> ':' startId ',' Types . ',' ':' endId ',' ':' type    (rule 6)

	','            shift, and enter state 33


State 24

	Row -> ID Value . '\n'                              (rule 16)
	Row -> ID Value . ',' Labels '\n'                   (rule 17)
	Row -> ID Value . ',' ID ',' Relationship '\n'      (rule 18)

	','            shift, and enter state 31
	'\n'           shift, and enter state 32


State 25

	Value -> ',' . '"' string '"'                       (rule 25)
	Value -> ',' . int                                  (rule 26)
	Value -> ',' . bool                                 (rule 27)
	Value -> ',' . null                                 (rule 28)

	int            shift, and enter state 27
	bool           shift, and enter state 28
	null           shift, and enter state 29
	'"'            shift, and enter state 30


State 26

	Rows -> Row Rows .                                  (rule 15)

	'\n'           reduce using rule 15


State 27

	Value -> ',' int .                                  (rule 26)

	','            reduce using rule 26
	'\n'           reduce using rule 26


State 28

	Value -> ',' bool .                                 (rule 27)

	','            reduce using rule 27
	'\n'           reduce using rule 27


State 29

	Value -> ',' null .                                 (rule 28)

	','            reduce using rule 28
	'\n'           reduce using rule 28


State 30

	Value -> ',' '"' . string '"'                       (rule 25)

	string         shift, and enter state 46


State 31

	Row -> ID Value ',' . Labels '\n'                   (rule 17)
	Row -> ID Value ',' . ID ',' Relationship '\n'      (rule 18)

	string         shift, and enter state 45
	alphanum       shift, and enter state 15
	'\n'           reduce using rule 21

	ID             goto state 43
	Labels         goto state 44

State 32

	Row -> ID Value '\n' .                              (rule 16)

	string         reduce using rule 16
	alphanum       reduce using rule 16
	'\n'           reduce using rule 16


State 33

	Header -> ':' startId ',' Types ',' . ':' endId ',' ':' type    (rule 6)

	':'            shift, and enter state 42


State 34

	Type -> String ':' . stringType                     (rule 9)
	Type -> String ':' . intType                        (rule 10)
	Type -> String ':' . boolType                       (rule 11)

	stringType     shift, and enter state 39
	intType        shift, and enter state 40
	boolType       shift, and enter state 41


State 35

	Types -> Type ',' . Types                           (rule 8)

	string         shift, and enter state 21
	alphanum       shift, and enter state 22

	Types          goto state 38
	Type           goto state 19
	String         goto state 20

State 36

	Header -> ':' id ',' Types ',' . ':' label          (rule 5)

	':'            shift, and enter state 37


State 37

	Header -> ':' id ',' Types ',' ':' . label          (rule 5)

	label          shift, and enter state 52


State 38

	Types -> Type ',' Types .                           (rule 8)

	','            reduce using rule 8
	'\n'           reduce using rule 8


State 39

	Type -> String ':' stringType .                     (rule 9)

	','            reduce using rule 9
	'\n'           reduce using rule 9


State 40

	Type -> String ':' intType .                        (rule 10)

	','            reduce using rule 10
	'\n'           reduce using rule 10


State 41

	Type -> String ':' boolType .                       (rule 11)

	','            reduce using rule 11
	'\n'           reduce using rule 11


State 42

	Header -> ':' startId ',' Types ',' ':' . endId ',' ':' type    (rule 6)

	endId          shift, and enter state 51


State 43

	Row -> ID Value ',' ID . ',' Relationship '\n'      (rule 18)

	','            shift, and enter state 50


State 44

	Row -> ID Value ',' Labels . '\n'                   (rule 17)

	'\n'           shift, and enter state 49


State 45

	ID -> string .                                      (rule 19)
	Labels -> string .                                  (rule 22)
	Labels -> string . ';' Labels                       (rule 23)

	';'            shift, and enter state 48
	','            reduce using rule 19
	'\n'           reduce using rule 22


State 46

	Value -> ',' '"' string . '"'                       (rule 25)

	'"'            shift, and enter state 47


State 47

	Value -> ',' '"' string '"' .                       (rule 25)

	','            reduce using rule 25
	'\n'           reduce using rule 25


State 48

	Labels -> string ';' . Labels                       (rule 23)

	string         shift, and enter state 57
	'\n'           reduce using rule 21

	Labels         goto state 56

State 49

	Row -> ID Value ',' Labels '\n' .                   (rule 17)

	string         reduce using rule 17
	alphanum       reduce using rule 17
	'\n'           reduce using rule 17


State 50

	Row -> ID Value ',' ID ',' . Relationship '\n'      (rule 18)

	string         shift, and enter state 55

	Relationship   goto state 54

State 51

	Header -> ':' startId ',' Types ',' ':' endId . ',' ':' type    (rule 6)

	','            shift, and enter state 53


State 52

	Header -> ':' id ',' Types ',' ':' label .          (rule 5)

	'\n'           reduce using rule 5


State 53

	Header -> ':' startId ',' Types ',' ':' endId ',' . ':' type    (rule 6)

	':'            shift, and enter state 59


State 54

	Row -> ID Value ',' ID ',' Relationship . '\n'      (rule 18)

	'\n'           shift, and enter state 58


State 55

	Relationship -> string .                            (rule 24)

	'\n'           reduce using rule 24


State 56

	Labels -> string ';' Labels .                       (rule 23)

	'\n'           reduce using rule 23


State 57

	Labels -> string .                                  (rule 22)
	Labels -> string . ';' Labels                       (rule 23)

	';'            shift, and enter state 48
	'\n'           reduce using rule 22


State 58

	Row -> ID Value ',' ID ',' Relationship '\n' .      (rule 18)

	string         reduce using rule 18
	alphanum       reduce using rule 18
	'\n'           reduce using rule 18


State 59

	Header -> ':' startId ',' Types ',' ':' endId ',' ':' . type    (rule 6)

	type           shift, and enter state 60


State 60

	Header -> ':' startId ',' Types ',' ':' endId ',' ':' type .    (rule 6)

	'\n'           reduce using rule 6


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 29
Number of terminals: 18
Number of non-terminals: 13
Number of states: 61
