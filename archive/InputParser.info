-----------------------------------------------------------------------------
Info file generated by Happy Version 1.20.1.1 from InputParser.y
-----------------------------------------------------------------------------

state 16 contains 1 shift/reduce conflicts.
state 17 contains 1 shift/reduce conflicts.
state 27 contains 1 shift/reduce conflicts.
state 34 contains 1 shift/reduce conflicts.

-----------------------------------------------------------------------------
Grammar
-----------------------------------------------------------------------------
	%start_parseInput -> Tables                        (0)
	Tables ->                                          (1)
	Tables -> Table Tables                             (2)
	Table -> Header Rows                               (3)
	Header -> ':' id ',' Types                         (4)
	Header -> ':' id ',' Types ':' label               (5)
	Header -> ':' startId ',' Types ':' endId ',' ':' type   (6)
	Types ->                                           (7)
	Types -> Type ',' Types                            (8)
	Type -> String ':' stringType                      (9)
	Type -> String ':' intType                         (10)
	Type -> String ':' boolType                        (11)
	String -> string                                   (12)
	String -> alphanum                                 (13)
	Rows ->                                            (14)
	Rows -> Row Rows                                   (15)
	Row -> alphanum Value                              (16)
	Row -> alphanum Value ',' Labels                   (17)
	Row -> alphanum Value ',' alphanum ',' string      (18)
	Labels ->                                          (19)
	Labels -> string                                   (20)
	Labels -> string ';' Labels                        (21)
	Value -> ',' '"' string '"'                        (22)
	Value -> ',' int                                   (23)
	Value -> ',' bool                                  (24)
	Value -> ',' null                                  (25)

-----------------------------------------------------------------------------
Terminals
-----------------------------------------------------------------------------
	stringType     { Tok _ TokStringType }
	intType        { Tok _ TokIntType }
	boolType       { Tok _ TokBoolType }
	id             { Tok _ TokId }
	startId        { Tok _ TokStartId }
	endId          { Tok _ TokEndId }
	label          { Tok _ TokLabel }
	type           { Tok _ TokType }
	string         { Tok _ (TokString $$) }
	alphanum       { Tok _ (TokAlphaNum $$) }
	int            { Tok _ (TokInt $$) }
	bool           { Tok _ (TokBool $$) }
	null           { Tok _ TokNull }
	':'            { Tok _ TokColon }
	';'            { Tok _ TokSemiColon }
	','            { Tok _ TokComma }
	'"'            { Tok _ TokQuoteMark }

-----------------------------------------------------------------------------
Non-terminals
-----------------------------------------------------------------------------
	%start_parseInput rule  0
	Tables          rules 1, 2
	Table           rule  3
	Header          rules 4, 5, 6
	Types           rules 7, 8
	Type            rules 9, 10, 11
	String          rules 12, 13
	Rows            rules 14, 15
	Row             rules 16, 17, 18
	Labels          rules 19, 20, 21
	Value           rules 22, 23, 24, 25

-----------------------------------------------------------------------------
States
-----------------------------------------------------------------------------
State 0

	%start_parseInput -> . Tables                       (rule 0)

	':'            shift, and enter state 5
	%eof           reduce using rule 1

	Tables         goto state 2
	Table          goto state 3
	Header         goto state 4

State 1

	Tables -> .                                         (rule 1)



State 2

	%start_parseInput -> Tables .                       (rule 0)

	%eof           accept


State 3

	Tables -> Table . Tables                            (rule 2)

	':'            shift, and enter state 5
	%eof           reduce using rule 1

	Tables         goto state 11
	Table          goto state 3
	Header         goto state 4

State 4

	Table -> Header . Rows                              (rule 3)

	alphanum       shift, and enter state 10
	':'            reduce using rule 14
	%eof           reduce using rule 14

	Rows           goto state 8
	Row            goto state 9

State 5

	Header -> ':' . id ',' Types                        (rule 4)
	Header -> ':' . id ',' Types ':' label              (rule 5)
	Header -> ':' . startId ',' Types ':' endId ',' ':' type    (rule 6)

	id             shift, and enter state 6
	startId        shift, and enter state 7


State 6

	Header -> ':' id . ',' Types                        (rule 4)
	Header -> ':' id . ',' Types ':' label              (rule 5)

	','            shift, and enter state 16


State 7

	Header -> ':' startId . ',' Types ':' endId ',' ':' type    (rule 6)

	','            shift, and enter state 15


State 8

	Table -> Header Rows .                              (rule 3)

	':'            reduce using rule 3
	%eof           reduce using rule 3


State 9

	Rows -> Row . Rows                                  (rule 15)

	alphanum       shift, and enter state 10
	':'            reduce using rule 14
	%eof           reduce using rule 14

	Rows           goto state 14
	Row            goto state 9

State 10

	Row -> alphanum . Value                             (rule 16)
	Row -> alphanum . Value ',' Labels                  (rule 17)
	Row -> alphanum . Value ',' alphanum ',' string     (rule 18)

	','            shift, and enter state 13

	Value          goto state 12

State 11

	Tables -> Table Tables .                            (rule 2)

	%eof           reduce using rule 2


State 12

	Row -> alphanum Value .                             (rule 16)
	Row -> alphanum Value . ',' Labels                  (rule 17)
	Row -> alphanum Value . ',' alphanum ',' string     (rule 18)

	alphanum       reduce using rule 16
	':'            reduce using rule 16
	','            shift, and enter state 27
	%eof           reduce using rule 16


State 13

	Value -> ',' . '"' string '"'                       (rule 22)
	Value -> ',' . int                                  (rule 23)
	Value -> ',' . bool                                 (rule 24)
	Value -> ',' . null                                 (rule 25)

	int            shift, and enter state 23
	bool           shift, and enter state 24
	null           shift, and enter state 25
	'"'            shift, and enter state 26


State 14

	Rows -> Row Rows .                                  (rule 15)

	':'            reduce using rule 15
	%eof           reduce using rule 15


State 15

	Header -> ':' startId ',' . Types ':' endId ',' ':' type    (rule 6)

	string         shift, and enter state 20
	alphanum       shift, and enter state 21
	':'            reduce using rule 7

	Types          goto state 22
	Type           goto state 18
	String         goto state 19

State 16

	Header -> ':' id ',' . Types                        (rule 4)
	Header -> ':' id ',' . Types ':' label              (rule 5)

	string         shift, and enter state 20
	alphanum       shift, and enter state 21
			(reduce using rule 7)

	':'            reduce using rule 7
	%eof           reduce using rule 7

	Types          goto state 17
	Type           goto state 18
	String         goto state 19

State 17

	Header -> ':' id ',' Types .                        (rule 4)
	Header -> ':' id ',' Types . ':' label              (rule 5)

	alphanum       reduce using rule 4
	':'            shift, and enter state 35
			(reduce using rule 4)

	%eof           reduce using rule 4


State 18

	Types -> Type . ',' Types                           (rule 8)

	','            shift, and enter state 34


State 19

	Type -> String . ':' stringType                     (rule 9)
	Type -> String . ':' intType                        (rule 10)
	Type -> String . ':' boolType                       (rule 11)

	':'            shift, and enter state 33


State 20

	String -> string .                                  (rule 12)

	':'            reduce using rule 12


State 21

	String -> alphanum .                                (rule 13)

	':'            reduce using rule 13


State 22

	Header -> ':' startId ',' Types . ':' endId ',' ':' type    (rule 6)

	':'            shift, and enter state 32


State 23

	Value -> ',' int .                                  (rule 23)

	alphanum       reduce using rule 23
	':'            reduce using rule 23
	','            reduce using rule 23
	%eof           reduce using rule 23


State 24

	Value -> ',' bool .                                 (rule 24)

	alphanum       reduce using rule 24
	':'            reduce using rule 24
	','            reduce using rule 24
	%eof           reduce using rule 24


State 25

	Value -> ',' null .                                 (rule 25)

	alphanum       reduce using rule 25
	':'            reduce using rule 25
	','            reduce using rule 25
	%eof           reduce using rule 25


State 26

	Value -> ',' '"' . string '"'                       (rule 22)

	string         shift, and enter state 31


State 27

	Row -> alphanum Value ',' . Labels                  (rule 17)
	Row -> alphanum Value ',' . alphanum ',' string     (rule 18)

	string         shift, and enter state 29
	alphanum       shift, and enter state 30
			(reduce using rule 19)

	':'            reduce using rule 19
	%eof           reduce using rule 19

	Labels         goto state 28

State 28

	Row -> alphanum Value ',' Labels .                  (rule 17)

	alphanum       reduce using rule 17
	':'            reduce using rule 17
	%eof           reduce using rule 17


State 29

	Labels -> string .                                  (rule 20)
	Labels -> string . ';' Labels                       (rule 21)

	alphanum       reduce using rule 20
	':'            reduce using rule 20
	';'            shift, and enter state 44
	%eof           reduce using rule 20


State 30

	Row -> alphanum Value ',' alphanum . ',' string     (rule 18)

	','            shift, and enter state 43


State 31

	Value -> ',' '"' string . '"'                       (rule 22)

	'"'            shift, and enter state 42


State 32

	Header -> ':' startId ',' Types ':' . endId ',' ':' type    (rule 6)

	endId          shift, and enter state 41


State 33

	Type -> String ':' . stringType                     (rule 9)
	Type -> String ':' . intType                        (rule 10)
	Type -> String ':' . boolType                       (rule 11)

	stringType     shift, and enter state 38
	intType        shift, and enter state 39
	boolType       shift, and enter state 40


State 34

	Types -> Type ',' . Types                           (rule 8)

	string         shift, and enter state 20
	alphanum       shift, and enter state 21
			(reduce using rule 7)

	':'            reduce using rule 7
	%eof           reduce using rule 7

	Types          goto state 37
	Type           goto state 18
	String         goto state 19

State 35

	Header -> ':' id ',' Types ':' . label              (rule 5)

	label          shift, and enter state 36


State 36

	Header -> ':' id ',' Types ':' label .              (rule 5)

	alphanum       reduce using rule 5
	':'            reduce using rule 5
	%eof           reduce using rule 5


State 37

	Types -> Type ',' Types .                           (rule 8)

	alphanum       reduce using rule 8
	':'            reduce using rule 8
	%eof           reduce using rule 8


State 38

	Type -> String ':' stringType .                     (rule 9)

	','            reduce using rule 9


State 39

	Type -> String ':' intType .                        (rule 10)

	','            reduce using rule 10


State 40

	Type -> String ':' boolType .                       (rule 11)

	','            reduce using rule 11


State 41

	Header -> ':' startId ',' Types ':' endId . ',' ':' type    (rule 6)

	','            shift, and enter state 47


State 42

	Value -> ',' '"' string '"' .                       (rule 22)

	alphanum       reduce using rule 22
	':'            reduce using rule 22
	','            reduce using rule 22
	%eof           reduce using rule 22


State 43

	Row -> alphanum Value ',' alphanum ',' . string     (rule 18)

	string         shift, and enter state 46


State 44

	Labels -> string ';' . Labels                       (rule 21)

	string         shift, and enter state 29
	alphanum       reduce using rule 19
	':'            reduce using rule 19
	%eof           reduce using rule 19

	Labels         goto state 45

State 45

	Labels -> string ';' Labels .                       (rule 21)

	alphanum       reduce using rule 21
	':'            reduce using rule 21
	%eof           reduce using rule 21


State 46

	Row -> alphanum Value ',' alphanum ',' string .     (rule 18)

	alphanum       reduce using rule 18
	':'            reduce using rule 18
	%eof           reduce using rule 18


State 47

	Header -> ':' startId ',' Types ':' endId ',' . ':' type    (rule 6)

	':'            shift, and enter state 48


State 48

	Header -> ':' startId ',' Types ':' endId ',' ':' . type    (rule 6)

	type           shift, and enter state 49


State 49

	Header -> ':' startId ',' Types ':' endId ',' ':' type .    (rule 6)

	alphanum       reduce using rule 6
	':'            reduce using rule 6
	%eof           reduce using rule 6


-----------------------------------------------------------------------------
Grammar Totals
-----------------------------------------------------------------------------
Number of rules: 26
Number of terminals: 17
Number of non-terminals: 11
Number of states: 50
